// 'export' робить цей клас доступним для імпорту в інших файлах.
// Цей клас відповідає за всю роботу з LocalStorage браузера - "пам'яттю",
// яка не очищується при перезавантаженні сторінки.
export class StorageService {
  // Метод для збереження даних. Він універсальний (generic) завдяки <T>.
  // Це означає, що він може зберігати будь-який тип даних: масив книг, масив користувачів тощо.
  save<T>(key: string, data: T): void {
    // 'localStorage.setItem' - це стандартна команда браузера для збереження даних.
    // Вона приймає два аргументи: ключ (назва, за якою ми будемо шукати дані) і самі дані.
    // 'JSON.stringify(data)' - це дуже важливий крок. LocalStorage може зберігати тільки текст (рядки).
    // Ця команда перетворює наш об'єкт або масив (data) на текстовий рядок у форматі JSON.
    localStorage.setItem(key, JSON.stringify(data));
  }

  // Метод для завантаження даних. Він також універсальний.
  // Повертає дані типу T або 'null', якщо за цим ключем нічого не знайдено.
  load<T>(key: string): T | null {
    // 'localStorage.getItem(key)' - команда для отримання даних за ключем.
    // Вона поверне або текстовий рядок, або 'null', якщо ключ не існує.
    const data = localStorage.getItem(key);

    // Це тернарний оператор - коротка форма 'if-else'.
    // Читається так: "Якщо 'data' існує (не є null)..."
    // "...тоді перетвори рядок 'data' назад на об'єкт за допомогою JSON.parse і поверни його..."
    // "...інакше (якщо 'data' є null), просто поверни null."
    return data ? JSON.parse(data) : null;
  }
}
